<?php

/**
 * Implements hook_init().
 */
function lazysizes_init()
{
  $module = 'lazysizes';
  $path = drupal_get_path('module', $module);
  drupal_add_js($path. '/' . 'lazysizes.min.js');
}

/**
 * Implements hook_theme_registry_alter().
 */
function lazysizes_theme_registry_alter(&$theme_registry) {
  $theme_registry['image']['function'] = 'lazysizes_image';
  return $theme_registry;
}

/**
* Returns HTML for an image.
 *
 * @param $variables
*   An associative array containing:
 *   - path: Either the path of the image file (relative to base_path()) or a
*     full URL.
 *   - width: The width of the image (if known).
 *   - height: The height of the image (if known).
 *   - alt: The alternative text for text-based browsers. HTML 4 and XHTML 1.0
*     always require an alt attribute. The HTML 5 draft allows the alt
*     attribute to be omitted in some cases. Therefore, this variable defaults
*     to an empty string, but can be set to NULL for the attribute to be
*     omitted. Usually, neither omission nor an empty string satisfies
*     accessibility requirements, so it is strongly encouraged for code calling
*     theme('image') to pass a meaningful value for this variable.
 *     - http://www.w3.org/TR/REC-html40/struct/objects.html#h-13.8
 *     - http://www.w3.org/TR/xhtml1/dtds.html
 *     - http://dev.w3.org/html5/spec/Overview.html#alt
 *   - title: The title text is displayed when the image is hovered in some
*     popular browsers.
 *   - attributes: Associative array of attributes to be placed in the img tag.
 * @return string
  *  HTML for a lazyloaded image
*/
function lazysizes_image($variables) {
  static $rdwimages_enabled, $image_placeholder_src;
  $attributes = $variables['attributes'];
  $noscript_attributes = $variables['attributes'];

  $src = file_create_url($variables['path']);
  if (module_enable(array('lazysizes'))) {

    $attributes['data-src'] = $src;
    $noscript_attributes['src'] = $src;

    // Integrate with Responsive Webdesign module.
    if (!isset($rdwimages_enabled)) {
      global $_rwdimages_set;
      $rdwimages_enabled = module_exists('rdwimages') && $_rwdimages_set['enabled'];
    }
    if ($rdwimages_enabled) {
      $attributes['class'] = array('rwdimage');
    }
    $attributes['class'][] = 'lazyload';
  }
  else {
    $attributes['src'] = $src;
  }


  foreach (array('width', 'height', 'alt', 'title') as $key) {
    if (isset($variables[$key])) {
      $attributes[$key] = $variables[$key];
    }
    if (isset($variables[$key])) {
      $noscript_attributes[$key] = $variables[$key];
    }
  }

  $noscript = '';
  if (!empty($attributes['data-src'])) {
    $noscript = '<noscript><img' . drupal_attributes($noscript_attributes) . ' /></noscript>';
  }

  return '<img' . drupal_attributes($attributes) . ' />' . $noscript;
}
