<?php

/**
 * Implements hook_menu().
 */
function dolce_vod_menu()
{
  $items['user/%/vod/%'] = array(
    'title' => 'VOD',
    'title callback' => 'dolce_vod_title_video',
    'title arguments' => array(3),
    'page callback' => 'dolce_vod_player_page',
    'page arguments' => array(1, 3),
    'access arguments' => array('access vod player'),
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function dolce_vod_theme($existing, $type, $theme, $path) {
  return array(
    'dolce_vod_player' => array(
      'template' => 'dolce_vod_player',
      'arguments' => array('data' => array())
    ),
  );
}

function dolce_vod_entity_update($entity) {
  if (isset($entity->type) && $entity->type == 'commerce_order') {
    $status = $entity->status;
    switch ($status) {
      case 'vod':
        //FAIRE QQCHOSE
        dolce_vod_process($entity);
    }
  }
}

function dolce_vod_permission() {
  return array(
    'access vod player' => array(
      'title' => t('Access VOD player'),
      'description' => t('Access the page with the VOD player when customer paid a video'),
    ),
  );
}

function dolce_vod_commerce_order_update($order) {
  if ($order->status == 'pending') {
    $payment_type = $order->data['payment_method'];
    $payment_full = $order->data['commerce_payment_order_paid_in_full_invoked'];
    $vods = dolce_vod_check_if_vod_in_order($order);
    // Avant de passer tout le monde en VOD ... on verifie si paiement par CB, paiement OK et si la personne a du VOD dans la commande.
    if ($payment_type == 'commerce_stripe_pi|commerce_payment_commerce_stripe_pi' && $payment_full == TRUE && !empty($vods)) {
      commerce_order_status_update($order, 'vod', TRUE, 'Order VOD');
      $order->log = 'Order status update to VOD programatically';
      commerce_order_save($order);
    }
  }
}

/*Si VOD est dans la commande */
function dolce_vod_check_if_vod_in_order($order) {
  foreach ($order->commerce_line_items['und'] as $key => $line_item) {
    $line_item_load = commerce_line_item_load($line_item['line_item_id']);
    if (isset($line_item_load->commerce_product)) {
      $product = commerce_product_load($line_item_load->commerce_product['und']['0']['product_id']);
      switch ($product->type) {
        case 'vod':
          $pids[] = $product->product_id;
          break;
      }
    }
  }
  return $pids;
}

/* Process function */
function dolce_vod_process($order) {
  $pids = dolce_vod_check_if_vod_in_order($order);
  if (!empty($pids)) {
    $buyer = _dolce_vod_attach_vod_to_user($pids, $order->uid);
    dolce_vod_send_mail($order);
  }
}

function _dolce_vod_attach_vod_to_user($pids, $uid) {
  $buyer = user_load($uid);
  foreach ($pids as $key => $pid) {
    $pid = array('product_id' => $pid);
    if (empty($buyer->field_user_vod['und'])) {
      $buyer->field_user_vod['und']['0'] = $pid;
    }
    else {
      if (dolce_vod_user_already_purchase_vod($buyer->field_user_vod['und'], $pid)){
        array_push($buyer->field_user_vod['und'], $pid);
      }
    }
  }
  $buyer = user_save($buyer);
  return $buyer;
}

function dolce_vod_get_video_id($product_id) {
  $product = commerce_product_load($product_id);
  $vimeo_id = $product->field_vod_vimeo_id['und']['0']['value'];
  return $vimeo_id;
}

function dolce_vod_title_video($product_id) {
  $product = commerce_product_load($product_id);
  return $product->title;
}

function dolce_vod_player_page($uid, $product_id) {
  global $user;
  if (dolce_vod_user_purchases($product_id) == FALSE || $uid != $user->uid) {
    drupal_access_denied();
  }
  $vimeo_id = dolce_vod_get_video_id($product_id);
  $data['vimeo_id'] = $vimeo_id;
  return theme('dolce_vod_player', array('data' => $data));
}

function dolce_vod_user_purchases($product_id) {
  global $user;
  $account = user_load($user->uid);
  $vods = $account->field_user_vod['und'];
  return dolce_vod_user_already_purchase_vod($vods, $product_id);
}

function dolce_vod_user_already_purchase_vod($vods, $product_id) {
  foreach($vods as $key => $search) {
    if ($search['product_id'] == $product_id) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Implements hook_mail().
 */
function dolce_vod_mail($key, &$message, $params)
{
  switch ($key) {
    case 'dolce_vod_mail':
      // Set headers etc
      $message['to'] = $params['to'];
      $message['subject'] = t('Your VOD access');
      $message['body'][] = t("Thank you for ordering a vod access for one of our videos.<br />");
      $message['body'][] = t("You can find all your videos on your VOD area at the following address : <br /><br />");
      $message['body'][] = $params['link'] . '<br />';
      $message['body'][] = t('See you soon');
      break;
  }
}

/* Preparation du mail avant de l'envoyer */
function dolce_vod_send_mail($order) {
  global $language;
  return drupal_mail('dolce_vod', 'dolce_vod_mail', $order->mail, $language->lang,
    array('link' => l('Access to VOD Area', 'user/'. $order->uid . '/vod', array('absolute' => TRUE)), 'to' => $order->mail), 'contact@dolcevitadog.com', TRUE);
}
