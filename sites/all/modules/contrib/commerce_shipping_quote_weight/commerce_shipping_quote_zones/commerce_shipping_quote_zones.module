<?php

/**
 * @file
 * Provides zone definitions for commerce_shipping_quote_weight module
 */

/**
 * Implementation of hook_menu().
 */

function commerce_shipping_quote_zones_menu() {
  $items = array();

  $items['admin/commerce/config/shipping-quote/zones'] = array(
    'title' => 'Shipping zones',
    'page callback' => 'commerce_shipping_quote_zones_admin',
    'access arguments' => array('administer shipping'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'commerce_shipping_quote_zones.admin.inc',
  );
  $items['admin/commerce/config/shipping-quote/zones/add'] = array(
      'title' => 'Add a shipping zone',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('commerce_shipping_quote_zones_add'),
      'access arguments' => array('administer shipping'),
      'type' => MENU_LOCAL_ACTION,
      'file' => 'commerce_shipping_quote_zones.admin.inc',
  );
  $items['admin/commerce/config/shipping-quote/zones/edit/%'] = array(
      'title' => 'Edit a shipping zone',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('commerce_shipping_quote_zones_edit', 6),
      'access arguments' => array('administer shipping'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'commerce_shipping_quote_zones.admin.inc',
  );
  $items['admin/commerce/config/shipping-quote/zones/delete/%'] = array(
      'title' => 'Edit a shipping zone',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('commerce_shipping_quote_zones_delete', 6),
      'access arguments' => array('administer shipping'),
      'type' => MENU_NORMAL_ITEM,
      'file' => 'commerce_shipping_quote_zones.admin.inc',
  );

  return $items;
}

/**
 * Implementation of hook_theme().
 */
function commerce_shipping_quote_zones_theme($existing, $type, $theme, $path) {
  return array(
    'commerce_shipping_quote_zones_admin' => array(
      'file' => 'commerce_shipping_quote_zones.admin.inc',
    ),
  );
}

/**
 * Get shipping zones
 *
 * @param $country
 * country name or code (optional)
 *
 * @return
 * an array containing the shipping zones.
 */
function commerce_shipping_quote_zones_get($country = NULL, $region = NULL) {

  if (! $country) {
    $r = db_select('commerce_shipping_quote_zones', 'csqz')
      ->fields('csqz')
      ->orderBy('name')
      ->execute()
      ->fetchAll(PDO::FETCH_ASSOC);
    //$r = db_query("SELECT * FROM {commerce_shipping_quote_zones} ORDER BY name");
  }
  else {
    if (is_int($country)) {
      $c->name = uc_country_get_by_id($country);
      $c->id = $country;
    }
    else {
      $c->name = $country;
      $c->id = db_query("SELECT name FROM {countries_country} WHERE country_name = '%s'", $country)->fetchField();

    }
    if (is_int($region)) {
      $r->name = zone_get_by_id($region);
      $r->id = $region;
    }
    else {
      $r->name = $region;
      $r->id = db_query("SELECT zone_name FROM {zones} WHERE zone_name = '%s'", $region)->fetchField();
    }

    // Willcard countries without regions
    if ($region < 1 && !db_query("SELECT zone_id FROM {zones} WHERE zone_country_id = %d", $c->id )->fetchField()) {
      $row = db_query("SELECT * FROM {commerce_shipping_quote_zones} WHERE countries LIKE '%%%s%%'", $c->name . ',' . $c->id);
    }
    else {
      $row = db_query("SELECT * FROM {commerce_shipping_quote_zones} WHERE countries LIKE '%%%s%%' AND (regions LIKE '%%%s%%' OR (regions IS NULL OR regions = '')) ORDER BY name", $c->name . ',' . $c->id, $r->name . ',' . $r->id);
    }
    return fetchObject($row);
  }

  $rows = array();
  //while ($row = db_fetch_object($r)) {
  foreach ($r as $row) {
    $rows[] = $row;
  }

  return $rows;
}
/**
 * Returns shipping zones ready to feed a selectbox
 */
function commerce_shipping_quote_zones_get_select() {
  $rows = array();
  $zones = db_select('commerce_shipping_quote_zones', 'csqz')
    ->fields('csqz', array('zid', 'name'))
    ->orderBy('name')
    ->execute()
    ->fetchAll();
  //$r = db_query("SELECT zid,name FROM {commerce_shipping_quote_zones} ORDER BY name");
  //while ($row = db_fetch_object($r)) {
  //echo "<pre>";print_r($zones);exit;
  if (!empty($zones)) {
    foreach ($zones as $row) {
      $rows[$row->zid] = $row->name;
    }
  }

  return $rows;
}
